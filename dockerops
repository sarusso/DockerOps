#!/bin/bash

# Find DockerOps software directory

# Credits: http://www.cyberciti.biz/faq/unix-linux-appleosx-bsd-bash-script-find-what-directory-itsstoredin/

# Set some default env vars
if [ -z "$SERVICES_IMAGES_DIR" ]; then
    # DEBUG echo "Defaulting services images dir"
    export SERVICES_IMAGES_DIR="$(pwd)/services"
fi

if [ -z "$PROJECT_DIR" ]; then
    # DEBUG echo "Defaulting project_dir dir"
    export PROJECT_DIR="$(pwd)"
fi

if [ -z "$PROJECT_NAME" ]; then
    # DEBUG echo "Defaulting project name"
    PWD=$(pwd)
    export PROJECT_NAME="${PWD##*/}"
fi

# Who am i?
# _script="$(readlink -f ${BASH_SOURCE[0]})" does not work on OSX

TARGET_FILE=${BASH_SOURCE[0]}

cd `dirname $TARGET_FILE`
TARGET_FILE=`basename $TARGET_FILE`

# Iterate down a (possible) chain of symlinks
while [ -L "$TARGET_FILE" ]
do
    TARGET_FILE=`readlink $TARGET_FILE`
    cd `dirname $TARGET_FILE`
    TARGET_FILE=`basename $TARGET_FILE`
done

# Compute the canonicalized name by finding the physical path 
# for the directory we're in and appending the target file.
PHYS_DIR=`pwd -P`
_script=$PHYS_DIR/$TARGET_FILE

# Delete last component from $_script
_base="$(dirname $_script)"

# Enter "home" directory
cd $_base

# Execute
if [[ $# -eq 0 ]] ; then
    fab help
elif [[ "x$1" == "x--version" ]] ; then
    fab version
else
    fab $@
fi

